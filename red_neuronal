import numpy as np
import tensorflow as tf
from generar import *

edadaux= np.asarray(edad, dtype=float)
#grados= np.asarray(dic, dtype=float)
departamentos=np.asarray(departamento, dtype=str)
#cada posicion de cada lista esta asociada con la misma posicion en la otra lista


#las capas densas son las que tienen conexiones de cada neurona con cada neurona de la siguiente capa
capa = tf.keras.layers.Dense(units=1, input_shape=[1] ) #units-> cantidad de neuronas de la capa de salida #input_shape una entrada con una neurona
modelo = tf.keras.Sequential([capa])

#como queremos que procese los datos
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1), #0,1 taza de aprendizaje
    loss="mean_squared_error"
)

#entrenarlo
historial=modelo.fit(edadaux,departamentos, epochs=1000, verbose=False) #epoch-> cuantas vueltas queremos que le de a cada dato


#graficar que tan mal estan los resultados de la red en cada vuelta que dio
import matplotlib.pyplot as plt
plt.xlabel("#Epoca")
plt.ylabel("Magnitud perdida")
plt.plot(historial.history["loss"])
plt.show()
